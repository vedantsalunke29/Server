# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [18.20.4]

    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - run: npm install
      
      - name: Start Application with PM2
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
          APP_PASS: ${{ secrets.APP_PASS }}
          CLOUDINARY_URL: ${{ secrets.CLOUDINARY_URL }}
          CLOUD_API_KEY: ${{ secrets.CLOUD_API_KEY }}
          CLOUD_API_SECRET: ${{ secrets.CLOUD_API_SECRET }}
          CLOUD_NAME: ${{ secrets.CLOUD_NAME }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          NODE_ENV: ${{ secrets.NODE_ENV }}
          PORT: ${{ secrets.PORT }}
          PORT_PY: ${{ secrets.PORT_PY }}
          USER_EMAIL: ${{ secrets.USER_EMAIL }}
        run: |
          pm2 restart BackendAPI || pm2 start backend/index.js --name BackendAPI --env MONGO_URI="${{ secrets.MONGO_URI }}" --env APP_PASS="${{ secrets.APP_PASS }}" --env CLOUDINARY_URL="${{ secrets.CLOUDINARY_URL }}" --env CLOUD_API_KEY="${{ secrets.CLOUD_API_KEY }}" --env CLOUD_API_SECRET="${{ secrets.CLOUD_API_SECRET }}" --env CLOUD_NAME="${{ secrets.CLOUD_NAME }}" --env JWT_SECRET="${{ secrets.JWT_SECRET }}" --env NODE_ENV="${{ secrets.NODE_ENV }}" --env PORT="${{ secrets.PORT }}" --env PORT_PY="${{ secrets.PORT_PY }}" --env USER_EMAIL="${{ secrets.USER_EMAIL }}"
